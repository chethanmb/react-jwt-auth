{"version":3,"sources":["services/auth.service.jsx","components/login.component.jsx","components/register.component.jsx","services/auth-header.jsx","services/user.service.jsx","components/home.component.jsx","components/profile.component.jsx","components/userdata.component.jsx","services/incident-service.jsx","components/create-new.component.jsx","theme.jsx","components/board-user.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["API_URL","ms","Promise","resolve","setTimeout","username","password","axios","post","then","response","data","token","localStorage","setItem","JSON","stringify","removeItem","empId","fname","lname","phone","custEmail","locationId","customerId","parse","getItem","required","swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","a","preventDefault","form","validateAll","checkBtn","context","_errors","length","sleep","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","type","placeholder","name","onChange","validations","Button","style","marginTop","marginBottom","height","fullWidth","variant","color","endIcon","Icon","disabled","marginRight","paddingTop","paddingBottom","CircularProgress","size","LinearProgress","display","Component","vusername","vpassword","vempId","vfname","vlname","vcustEmail","isEmail","Register","onChangelocationId","Id","get","console","log","locationData","onChangeLoadLocations","handleRegister","onChangeusername","onChangepassword","onChangeempId","onChangefname","onChangelname","onChangephone","onChangecustEmail","onChangecustomerId","customerData","successful","register","htmlFor","map","key","customerName","locationName","authHeader","user","accessToken","Authorization","headers","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Profile","milliseconds","showModal","rowData","isModalVisible","singleIncident","handleOk","handleCancel","currentUser","getCurrentUser","incidentData","setIsModalVisible","loadModal","id","attid","attachId","attname","attachmentName","responseType","res","fileDownload","classes","to","textDecoration","icons","title","padding","backgroundColor","fontSize","options","pageSize","toolbar","paging","search","cellStyle","headerStyle","actionsColumnIndex","columns","field","width","maxWidth","whiteSpace","render","rowdata","tableData","actions","icon","tooltip","onClick","event","visible","onOk","okText","okButtonProps","onCancel","cancelButtonProps","root","Grid","container","spacing","item","xs","sm","description","Divider","incidentReportedDate","onClickDownload","withStyles","theme","flexGrow","paper","textAlign","palette","text","secondary","button","margin","User","undefined","changeCustomer","changeLocation","handleCustomerSwitch","handleLocationSwitch","loginStatus","checked","firstName","lastName","employeeId","FormControlLabel","control","Switch","label","inputProps","labelPlacement","customerEmail","fData","createMuiTheme","overrides","MuiButton","fontWeight","checkFileSize","files","err","x","userid","appid","attachid","date","handleSubmit","onChangeTitle","onChangeDescription","onChangeapplicationId","onChangeAttachid","onChangeDate","onChangefilehandler","appdata","formData","FormData","append","selectedFile","authService","IncService","CreateNew","fileSize","Math","round","SelectStatus","loaded","selectStatus","applicationId","applicationName","fire","backdrop","BoardUser","content","UserService","getUserBoard","App","logout","isAuthenticated","class","userdata","href","exact","path","component","BoardModerator","BoardAdmin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a9347ad.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport swal from \"sweetalert2\";\r\n\r\nconst API_URL = \"http://localhost:1025/Users/\";\r\n\r\nclass AuthService {\r\n  sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"authenticate\", {\r\n        username,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n          // const Toast = swal.mixin({\r\n          //   toast: true,\r\n          //   position: \"top-end\",\r\n          //   showConfirmButton: false,\r\n          //   timer: 900,\r\n          //   timerProgressBar: true,\r\n          //   didOpen: (toast) => {\r\n          //     toast.addEventListener(\"mouseenter\", swal.stopTimer);\r\n          //     toast.addEventListener(\"mouseleave\", swal.resumeTimer);\r\n          //   },\r\n          // });\r\n          // Toast.fire({\r\n          //   icon: \"success\",\r\n          //   title: \"Signed in successfully\",\r\n          // });\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  // getCustomerList() {\r\n  //   axios.get(API_URL + \"get-cust-list\").then((res) => {\r\n  //     return res.data;\r\n  //   });\r\n  // }\r\n\r\n  register(\r\n    username,\r\n    password,\r\n    empId,\r\n    fname,\r\n    lname,\r\n    phone,\r\n    custEmail,\r\n    locationId,\r\n    customerId\r\n  ) {\r\n    return axios.post(API_URL + \"register\", {\r\n      username,\r\n      password,\r\n      empId,\r\n      fname,\r\n      lname,\r\n      phone,\r\n      custEmail,\r\n      locationId,\r\n      customerId,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { FaArrowAltCircleRight } from \"react-icons/fa\";\r\nimport swal from \"sweetalert2\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport SelectInput from \"@material-ui/core/Select/SelectInput\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Toast = swal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 1500,\r\n  timerProgressBar: true,\r\n  didOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", swal.resumeTimer);\r\n  },\r\n});\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  async handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      await this.sleep(3000);\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          setTimeout(() => {\r\n            window.location.reload(false);\r\n          }, 0);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            //autocomplete=\"off\"\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              {/* <label htmlFor=\"username\">Username</label> */}\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              {/* <label htmlFor=\"password\">Password</label> */}\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group \">\r\n              <Button\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  marginBottom: \"10px\",\r\n                  height: \"3em\",\r\n                }}\r\n                fullWidth=\"true\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                endIcon={<Icon>login</Icon>}\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span\r\n                    style={{\r\n                      marginRight: \"10px\",\r\n                      marginTop: \"5px\",\r\n                      paddingTop: \"0px\",\r\n                      paddingBottom: \"0px\",\r\n                    }}\r\n                  >\r\n                    <CircularProgress size={20} color={\"primary\"} />\r\n                  </span>\r\n                )}\r\n                <span>Login</span>{\" \"}\r\n              </Button>\r\n              {this.state.loading && (\r\n                <span>\r\n                  <LinearProgress />\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n{\r\n  /* <div className=\"form-group \">\r\n              <div class=\"d-grid gap-2 col-12 mx-auto\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.state.loading}\r\n                >\r\n                  {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )}\r\n                  <span>\r\n                    <b>Login</b>\r\n                  </span>{\" \"}\r\n                  <FaArrowAltCircleRight />\r\n                </button>\r\n              </div>\r\n            </div> */\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport axios from \"axios\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport authService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vempId = (value) => {\r\n  if (value.length !== 8) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Employee ID must be of 8 digits\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vfname = (value) => {\r\n  if (value.length < 1 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        <b>First Name</b> must be more than 1 character\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vlname = (value) => {\r\n  if (value.length < 1 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        <b>Last Name</b> must be more than 1 character\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vcustEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email ID\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeusername = this.onChangeusername.bind(this);\r\n    this.onChangepassword = this.onChangepassword.bind(this);\r\n    this.onChangeempId = this.onChangeempId.bind(this);\r\n    this.onChangefname = this.onChangefname.bind(this);\r\n    this.onChangelname = this.onChangelname.bind(this);\r\n    this.onChangephone = this.onChangephone.bind(this);\r\n    this.onChangecustEmail = this.onChangecustEmail.bind(this);\r\n    this.onChangelocationId = this.onChangelocationId.bind(this);\r\n    this.onChangecustomerId = this.onChangecustomerId.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      empId: \"\",\r\n      fname: \"\",\r\n      lname: \"\",\r\n      phone: \"\",\r\n      custEmail: \"\",\r\n      locationId: \"\",\r\n      customerId: \"\",\r\n      customerData: [],\r\n      locationData: [],\r\n      successful: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // debugger;\r\n    axios.get(\"http://localhost:1025/Users/get-cust-list\").then((response) => {\r\n      console.log(response.data);\r\n\r\n      this.setState({\r\n        customerData: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  onChangeusername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n  onChangepassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeempId(e) {\r\n    this.setState({\r\n      empId: e.target.value,\r\n    });\r\n  }\r\n  onChangefname(e) {\r\n    this.setState({\r\n      fname: e.target.value,\r\n    });\r\n  }\r\n  onChangelname(e) {\r\n    this.setState({\r\n      lname: e.target.value,\r\n    });\r\n  }\r\n  onChangephone(e) {\r\n    this.setState({\r\n      phone: e.target.value,\r\n    });\r\n  }\r\n  onChangecustEmail(e) {\r\n    this.setState({\r\n      custEmail: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangecustomerId(e) {\r\n    this.setState({\r\n      customerId: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangelocationId = (e) => {\r\n    //debugger;\r\n    this.setState({ customerId: e.target.value });\r\n    var Id = e.target.value;\r\n    axios\r\n      .get(`http://localhost:1025/Users/locations/${Id}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          locationData: response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  onChangeLoadLocations = (e) => {\r\n    //debugger;\r\n    this.setState({ locationId: e.target.value });\r\n  };\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.password,\r\n        this.state.empId,\r\n        this.state.fname,\r\n        this.state.lname,\r\n        this.state.phone,\r\n        this.state.custEmail,\r\n        this.state.locationId,\r\n        this.state.customerId\r\n      ).then(\r\n        (response) => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true,\r\n          });\r\n          this.props.history.push(\"/login\");\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <div className=\"card card-container\">\r\n          {/* <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          /> */}\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeusername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangepassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"empId\">Emp ID</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"empId\"\r\n                    value={this.state.empId}\r\n                    onChange={this.onChangeempId}\r\n                    validations={[required, vempId]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"fname\">First name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"fname\"\r\n                    value={this.state.fname}\r\n                    onChange={this.onChangefname}\r\n                    validations={[required, vfname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"fname\">Last name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lname\"\r\n                    value={this.state.lname}\r\n                    onChange={this.onChangelname}\r\n                    validations={[required, vlname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"fname\">Phone</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"phone\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChangephone}\r\n                    // validations={[required, vphone]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"custEmail\">Customer Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"custEmail\"\r\n                    value={this.state.custEmail}\r\n                    onChange={this.onChangecustEmail}\r\n                    validations={[required, vcustEmail]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"customerId\">Customer</label>\r\n                  <select\r\n                    className=\"form-select\"\r\n                    name=\"Customer\"\r\n                    value={this.state.customerId}\r\n                    onChange={this.onChangelocationId}\r\n                  >\r\n                    <option>Select Client</option>\r\n                    {this.state.customerData.map((e, key) => {\r\n                      // debugger;\r\n                      return (\r\n                        <option key={key} value={e.customerId}>\r\n                          {e.customerName}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"locationId\">Location</label>\r\n                  <select\r\n                    className=\"form-select\"\r\n                    name=\"locationId\"\r\n                    value={this.state.locationId}\r\n                    onChange={this.onChangeLoadLocations}\r\n                  >\r\n                    {this.state.locationData.map((e, key) => {\r\n                      return (\r\n                        <option key={key} value={e.locationId}>\r\n                          {e.locationName}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"Sign Up\"></label>\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    return { Authorization: \"Bearer \" + user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/test/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\");\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        this.setState({\r\n          content: response.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n//import Loader from \"../Utils/Loader\"\r\nimport IncidentView from \"./Modals/incident-view.component\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport fileDownload from \"js-file-download\";\r\nimport { experimentalStyled } from \"@material-ui/core/styles/styled\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { FaEnvelope, FaUnderline } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Modal } from \"antd\";\r\n\r\nimport { forwardRef } from \"react\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  button: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n});\r\n\r\nconst style = {\r\n  background: \"#3f51b5\",\r\n  borderRadius: 1,\r\n  border: 0,\r\n  color: \"white\",\r\n  height: 25,\r\n  padding: \"0 10px\",\r\n  boxShadow: \"0 2px 4px 2px rgba(0, 0, 0, .3)\",\r\n};\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser(),\r\n      incidentData: [],\r\n      loading: true,\r\n      isModalVisible: false,\r\n      setIsModalVisible: false,\r\n      loadModal: false,\r\n      singleIncident: [],\r\n    };\r\n    this.showModal = this.showModal.bind(this);\r\n  }\r\n  sleep = (milliseconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `http://localhost:1025/api/Incidents/user/${this.state.currentUser.id}`\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          incidentData: response.data,\r\n          loadModal: true,\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  showModal = (e, rowData) => {\r\n    console.log(rowData);\r\n    this.setState({\r\n      isModalVisible: true,\r\n      singleIncident: rowData,\r\n    });\r\n  };\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      isModalVisible: false,\r\n    });\r\n  };\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      isModalVisible: false,\r\n    });\r\n  };\r\n\r\n  onClickDownload(e) {\r\n    var attid = this.state.singleIncident.attachId;\r\n    var attname = this.state.singleIncident.attachmentName;\r\n    axios\r\n      .get(`http://localhost:1025/api/Incidents/attachments/${attid}`, {\r\n        responseType: \"blob\",\r\n      })\r\n      .then((res) => {\r\n        fileDownload(res.data, attname);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    //if (this.state.loading) return <Loader />;\r\n    const { classes } = this.props;\r\n    const { currentUser, loadModal, singleIncident } = this.state;\r\n    console.log(singleIncident);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/create-new\" style={{ textDecoration: \"none\" }}>\r\n          <Button\r\n            style={{\r\n              marginTop: \"10px\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            endIcon={<Icon>launch</Icon>}\r\n          >\r\n            <span>Submit New</span>{\" \"}\r\n          </Button>\r\n        </Link>\r\n\r\n        {loadModal ? (\r\n          <div className=\"mat-table\">\r\n            <MaterialTable\r\n              icons={tableIcons}\r\n              title=\"Incident History\"\r\n              style={{\r\n                padding: \"0 10px\",\r\n                backgroundColor: \"\",\r\n                fontSize: 13,\r\n                color: \"\",\r\n              }}\r\n              options={{\r\n                pageSize: 8,\r\n                //pageSizeOptions: [20, 50, 100],\r\n                toolbar: true,\r\n                paging: true,\r\n                search: true,\r\n                height: 100,\r\n                cellStyle: { padding: \"0.6em\" },\r\n                headerStyle: { padding: \"0.8em\" },\r\n                actionsColumnIndex: -1,\r\n              }}\r\n              columns={[\r\n                {\r\n                  title: \"#\",\r\n                  field: \"id\",\r\n                  width: 500,\r\n                  headerStyle: {\r\n                    maxWidth: \"2%\",\r\n                    backgroundColor: \"#eeeeee\",\r\n                    whiteSpace: \"nowrap\",\r\n                  },\r\n                  render: (rowdata) => (\r\n                    <div style={{ width: \"\", backgroundColor: \"\" }}>\r\n                      {rowdata.tableData.id + 1}\r\n                    </div>\r\n                  ),\r\n                },\r\n                {\r\n                  title: \"Title\",\r\n                  field: \"title\",\r\n                  width: 100,\r\n                  headerStyle: {\r\n                    backgroundColor: \"#eeeeee\",\r\n                    color: \"#0\",\r\n                  },\r\n                },\r\n                {\r\n                  title: \"Description\",\r\n                  field: \"description\",\r\n                  width: 500,\r\n                  headerStyle: {\r\n                    backgroundColor: \"#eeeeee\",\r\n                    color: \"#0\",\r\n                  },\r\n                },\r\n                {\r\n                  title: \"Reported Date\",\r\n                  field: \"incidentReportedDate\",\r\n                  headerStyle: {\r\n                    backgroundColor: \"#eeeeee\",\r\n                    color: \"#0\",\r\n                  },\r\n                },\r\n                {\r\n                  title: \"Attachments\",\r\n                  field: \"attachmentName\",\r\n                  headerStyle: {\r\n                    backgroundColor: \"#eeeeee\",\r\n                    color: \"#0\",\r\n                  },\r\n                },\r\n              ]}\r\n              actions={[\r\n                {\r\n                  icon: \"edit\",\r\n                  tooltip: \"View\",\r\n                  onClick: (event, rowData) => {\r\n                    this.showModal(event, rowData);\r\n                  },\r\n                },\r\n              ]}\r\n              data={this.state.incidentData}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Modal\r\n          title=\"\"\r\n          visible={this.state.isModalVisible}\r\n          onOk={this.handleOk}\r\n          okText=\"Close\"\r\n          okButtonProps={{ style: { backgroundColor: \"#3f51b5\" } }}\r\n          onCancel={this.handleCancel}\r\n          cancelButtonProps={{ style: { display: \"none\" } }}\r\n          width={800}\r\n          //footer={null}\r\n          //centered\r\n        >\r\n          <Form>\r\n            <div className={classes.root}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <div className=\"form-group\">\r\n                    <label>Title</label>\r\n                    <Input\r\n                      name=\"title\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={singleIncident.title}\r\n                      disabled=\"true\"\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <Input\r\n                      name=\"description\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={singleIncident.description}\r\n                      disabled=\"true\"\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Divider />\r\n                <Grid item xs={12} sm={6}>\r\n                  <div className=\"form-group\">\r\n                    <label>Reported Date</label>\r\n                    <Input\r\n                      name=\"title\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={singleIncident.incidentReportedDate}\r\n                      disabled=\"true\"\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                {singleIncident.attachmentName ? (\r\n                  <Grid item xs={12} sm={6}>\r\n                    <div className=\"form-group\">\r\n                      <label>Attachments</label>\r\n                      <Input\r\n                        name=\"attachmentName\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={singleIncident.attachmentName}\r\n                        disabled=\"true\"\r\n                      />\r\n\r\n                      <Link\r\n                        //style={style}\r\n                        size=\"small\"\r\n                        backgroundColor=\"green\"\r\n                        onClick={() => {\r\n                          this.onClickDownload();\r\n                        }}\r\n                      >\r\n                        <b>\r\n                          <u> Download Attachments</u>\r\n                        </b>\r\n                        <ArrowDownwardIcon />\r\n                      </Link>\r\n                    </div>\r\n                  </Grid>\r\n                ) : (\r\n                  <> </>\r\n                )}\r\n              </Grid>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(Profile);\r\n","import { render } from \"@testing-library/react\";\r\nimport React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Label } from \"@material-ui/icons\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport axios from \"axios\";\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // username: \"\",\r\n      // firstName: \"\",\r\n      // lastName: \"\",\r\n      // employeeId: \"\",\r\n      // phone: \"\",\r\n      // customerName: \"\",\r\n      // customerEmail: \"\",\r\n      // locationName: \"\",\r\n      locationId: \"\",\r\n      customerId: \"\",\r\n      customerData: [],\r\n      locationData: [],\r\n      currentUser: undefined,\r\n      successful: false,\r\n      loading: false,\r\n      message: \"\",\r\n      changeCustomer: false,\r\n      changeLocation: false,\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    // this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    // //this.onChangeUserid = this.onChangeUserid.bind(this);\r\n    // this.onChangeapplicationId = this.onChangeapplicationId.bind(this);\r\n    // this.onChangeAttachid = this.onChangeAttachid.bind(this);\r\n    // this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.handleCustomerSwitch = this.handleCustomerSwitch.bind(this);\r\n    this.handleLocationSwitch = this.handleLocationSwitch.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n    axios.get(\"http://localhost:1025/Users/get-cust-list\").then(\r\n      (response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          customerData: response.data,\r\n          message: response.data.message,\r\n          successful: true,\r\n        });\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          successful: false,\r\n          message: resMessage,\r\n        });\r\n      }\r\n    );\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        loginStatus: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  onChangecustomerId(e) {\r\n    this.setState({\r\n      customerId: e.target.value,\r\n    });\r\n  }\r\n  onChangelocationId = (e) => {\r\n    //debugger;\r\n    this.setState({ customerId: e.target.value });\r\n    var Id = e.target.value;\r\n    axios\r\n      .get(`http://localhost:1025/Users/locations/${Id}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          locationData: response.data,\r\n        });\r\n      });\r\n  };\r\n\r\n  onChangeLoadLocations = (e) => {\r\n    //debugger;\r\n    this.setState({ locationId: e.target.value });\r\n  };\r\n\r\n  handleCustomerSwitch(e) {\r\n    this.setState({\r\n      changeCustomer: e.target.checked,\r\n    });\r\n\r\n    console.log(this.state.changeCustomer);\r\n  }\r\n\r\n  handleLocationSwitch(e) {\r\n    this.setState({\r\n      changeLocation: e.target.checked,\r\n    });\r\n\r\n    console.log(this.state.changeLocation);\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, changeCustomer, changeLocation } = this.state;\r\n    return (\r\n      <div className=\"col-md-3 mx-auto\">\r\n        {currentUser ? (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <Input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={currentUser.username}\r\n               disabled=\"true\"\r\n                \r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>First Name</label>\r\n              <Input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={currentUser.firstName}\r\n                //readOnly=\"true\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Last Name</label>\r\n              <Input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={currentUser.lastName}\r\n                //readOnly=\"true\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Employee ID</label>\r\n              <Input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={currentUser.employeeId}\r\n                disabled=\"true\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Phone</label>\r\n              <Input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={currentUser.phone}\r\n                // readOnly=\"true\"\r\n              />\r\n            </div>\r\n            <span>Current Client: {currentUser.customerName}</span>\r\n            <br />\r\n            <FormControlLabel\r\n              value=\"bottom\"\r\n              control={\r\n                <Switch\r\n                  checked={this.state.changeCustomer}\r\n                  onChange={this.handleCustomerSwitch}\r\n                  color=\"primary\"\r\n                  name=\"changeCustomer\"\r\n                  label=\"Change Client?\"\r\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Change Client?\"\r\n              labelPlacement=\"start\"\r\n            />\r\n\r\n            {changeCustomer ? (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"customerId\">Client Name</label>\r\n\r\n                <select\r\n                  className=\"form-select\"\r\n                  name=\"Customer\"\r\n                  value={this.state.customerId}\r\n                  onChange={this.onChangelocationId}\r\n                >\r\n                  <option>Select Client</option>\r\n                  {this.state.customerData.map((e, key) => {\r\n                    // debugger;\r\n                    return (\r\n                      <option key={key} value={e.customerId}>\r\n                        {e.customerName}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <label>Client Email</label>\r\n              <Input\r\n                name=\"title\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={currentUser.customerEmail}\r\n                // readOnly=\"true\"\r\n              />\r\n            </div>\r\n\r\n            <span>Current Location: {currentUser.locationName}</span>\r\n            <br />\r\n            <FormControlLabel\r\n              value=\"bottom\"\r\n              control={\r\n                <Switch\r\n                  checked={this.state.changeLocation}\r\n                  onChange={this.handleLocationSwitch}\r\n                  color=\"primary\"\r\n                  name=\"changeLocation\"\r\n                  label=\"Change Location?\"\r\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Change Location?\"\r\n              labelPlacement=\"start\"\r\n            />\r\n            {changeLocation ? (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"locationId\">Location</label>\r\n                <select\r\n                  className=\"form-select\"\r\n                  name=\"locationId\"\r\n                  value={this.state.locationId}\r\n                  onChange={this.onChangeLoadLocations}\r\n                >\r\n                  {this.state.locationData.map((e, key) => {\r\n                    return (\r\n                      <option key={key} value={e.locationId}>\r\n                        {e.locationName}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Form>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:1025/api/Incidents/\";\r\n\r\nclass IncService {\r\n  sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  CreateNew(fData) {\r\n    return axios\r\n      .post(API_URL + \"create\", fData, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new IncService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport IncService from \"../services/incident-service\";\r\nimport { FaArrowAltCircleRight } from \"react-icons/fa\";\r\nimport swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport authService from \"../services/auth.service\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport theme from \"../theme\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Progress } from \"antd\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      userid: \"\",\r\n      appid: \"\",\r\n      attachid: \"\",\r\n      date: \"\",\r\n      appid: \"\",\r\n      appdata: [],\r\n      selectedFile: null,\r\n      fileSize: null,\r\n      SelectStatus: false,\r\n      successful: false,\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    //this.onChangeUserid = this.onChangeUserid.bind(this);\r\n    this.onChangeapplicationId = this.onChangeapplicationId.bind(this);\r\n    this.onChangeAttachid = this.onChangeAttachid.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onChangefilehandler = this.onChangefilehandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // debugger;\r\n    axios\r\n      .get(\"http://localhost:1025/api/Incidents/get-app-list\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          appdata: response.data,\r\n        });\r\n      });\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false,\r\n      loading: true,\r\n    });\r\n    this.form.validateAll();\r\n    const formData = new FormData(event.target);\r\n    formData.append(\"attachments\", this.state.selectedFile);\r\n    formData.append(\"userid\", authService.getCurrentUser().id);\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      IncService.CreateNew(formData).then(\r\n        (response) => {\r\n          this.setState({\r\n            message: response.data,\r\n            successful: true,\r\n          });\r\n\r\n          this.props.history.push(\"/profile\");\r\n          //window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n  // onChangeUserid(e) {\r\n  //   this.setState({\r\n  //     userid: e.target.value,\r\n  //   });\r\n  // }\r\n  onChangeapplicationId(e) {\r\n    this.setState({\r\n      appid: e.target.value,\r\n    });\r\n  }\r\n  onChangeAttachid(e) {\r\n    this.setState({\r\n      attachid: e.target.value,\r\n    });\r\n  }\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  }\r\n  onChangefilehandler(e) {\r\n    console.log(e.target.files[0]);\r\n\r\n    this.setState({\r\n      selectedFile: e.target.files[0],\r\n      fileSize: Math.round(e.target.files[0].size / 1024),\r\n      SelectStatus: true,\r\n      loaded: 0,\r\n    });\r\n  }\r\n\r\n  checkFileSize = (event) => {\r\n    let files = event.target.files;\r\n    let size = 5124;\r\n    let err = \"\";\r\n    for (var x = 0; x < files.length; x++) {\r\n      if (files[x].size > size) {\r\n        err += files[x].type + \"is too large, please pick a smaller file\\n\";\r\n      }\r\n    }\r\n    if (err !== \"\") {\r\n      event.target.value = null;\r\n      console.log(err);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const selectStatus = this.state.SelectStatus;\r\n    return (\r\n      <div className=\"col-md-4 mx-auto\">\r\n        <Form\r\n          onSubmit={this.handleSubmit}\r\n          ref={(c) => {\r\n            this.form = c;\r\n          }}\r\n        >\r\n          <h3>Incident Details</h3>\r\n\r\n          <div className=\"form-group\">\r\n            <Input\r\n              name=\"title\"\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              className=\"form-control\"\r\n              value={this.state.title}\r\n              onChange={this.onChangeTitle}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Input\r\n              name=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n          {/* <div className=\"form-group\">\r\n            <Input\r\n              name=\"userid\"\r\n              type=\"text\"\r\n              placeholder=\"Userid\"\r\n              className=\"form-control\"\r\n              value={this.state.userid}\r\n              onChange={this.onChangeUserid}\r\n              validations={[required]}\r\n            />\r\n          </div> */}\r\n\r\n          <div className=\"form-group\">\r\n            <select\r\n              className=\"form-select\"\r\n              name=\"appid\"\r\n              placeholder=\"Application\"\r\n              value={this.state.applicationId}\r\n              onChange={this.onChangeapplicationId}\r\n            >\r\n              <option>Select Application</option>\r\n              {this.state.appdata.map((e, key) => {\r\n                // debugger;\r\n                return (\r\n                  <option key={key} value={e.applicationId}>\r\n                    {e.applicationName}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Input\r\n              name=\"attachid\"\r\n              type=\"text\"\r\n              placeholder=\"Attachid\"\r\n              className=\"form-control\"\r\n              value={this.state.attachid}\r\n              onChange={this.onChangeAttachid}\r\n              // validations={[required]}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Input\r\n              name=\"date\"\r\n              type=\"text\"\r\n              placeholder=\"Date\"\r\n              className=\"form-control\"\r\n              value={this.state.date}\r\n              onChange={this.onChangeDate}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <Input\r\n              name=\"file\"\r\n              type=\"file\"\r\n              placeholder=\"attachments\"\r\n              className=\"form-control\"\r\n              //value={this.state.date}\r\n              onChange={this.onChangefilehandler}\r\n              // validations={[required]}\r\n            />\r\n            {selectStatus ? (\r\n              <span>File size: {this.state.fileSize} KB</span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group \">\r\n            <Button\r\n              style={{\r\n                marginTop: \"20px\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n              fullWidth=\"true\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              endIcon={<Icon>send</Icon>}\r\n              disabled={this.state.loading}\r\n            >\r\n              <span>Submit</span>{\" \"}\r\n            </Button>\r\n\r\n            {this.state.loading && (\r\n              <span>\r\n                {/* <CircularProgress size={25} color={\"primary\"} /> */}\r\n                <LinearProgress />\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          {this.state.message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  this.state.successful\r\n                    ? swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Successfully submitted\",\r\n                        text: \"_________________________________________\",\r\n                        width: \"22rem\",\r\n                        toast: false,\r\n                        backdrop: `rgba(93, 152, 91, 0.6)`,\r\n                      })\r\n                    : swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"An error occurred\",\r\n                        text: this.state.message,\r\n                        width: \"22rem\",\r\n                        toast: false,\r\n                        backdrop: `rgba(152, 93, 91, 0.6)`,\r\n                      })\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {/* {this.state.message} */}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton\r\n            style={{ display: \"none\" }}\r\n            ref={(c) => {\r\n              this.checkBtn = c;\r\n            }}\r\n          />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n{\r\n  /* <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>\r\n                  <b>Submit</b>\r\n                </span>{\" \"}\r\n              </button> */\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme({\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: \"\",\r\n        backgroundColor: \"red\",\r\n        margin: \"10px\",\r\n        \"&:hover\": {\r\n          backgroundColor: \"green\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        this.setState({\r\n          content: response.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport {\n  FaSignOutAlt,\n  FaArrowAltCircleRight,\n  FaUserCircle,\n} from \"react-icons/fa\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport User from \"./components/userdata.component\";\nimport CreateNew from \"./components/create-new.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n\n    this.state = {\n      //showModeratorBoard: false,\n      // showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        loginStatus: true,\n      });\n    }\n  }\n\n  logout() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    const { isAuthenticated } = this.state;\n\n    return (\n      <div\n        className=\"app-main\"\n        style={{\n          //backgroundColor: \"#8b93c0\",\n          height: \"100vh\",\n        }}\n      >\n        <nav className=\"navbar sticky-top navbar-expand navbar-dark \">\n          <Link to={\"/\"} className=\"navbar-brand\"></Link>\n          {/* <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div> */}\n\n          {currentUser ? (\n            <div class=\"collapse navbar-collapse\">\n              <div className=\"navbar-nav mr-auto \">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    {/* Welcome {currentUser.username} */}\n                    Welcome {currentUser.firstName}\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link\n                    to={\"/userdata\"}\n                    className=\"nav-link \"\n                    onClick={this.userdata}\n                  >\n                    <FaUserCircle fontSize=\"1.2em\" />\n                  </Link>\n                </li>\n\n                <li className=\"nav-item \">\n                  <a href=\"/login\" className=\"nav-link \" onClick={this.logout}>\n                    <FaArrowAltCircleRight fontSize=\"1.2em\" />\n                  </a>\n                </li>\n              </div>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        {/* {currentUser ? (\n          <div className=\"container card container-fluid mt-4\">\n            <div className=\"col-auto\">Full Name: {currentUser.fullName}</div>\n            <div className=\"col-auto\">\n              Employee ID: {currentUser.employeeId}\n            </div>\n            <div className=\"col-auto\">Email ID: {currentUser.username}</div>\n            <div className=\"col-auto\">\n              Client Email: {currentUser.customerEmail}\n            </div>\n            <div className=\"col-auto\">\n              Client Name: {currentUser.customerName}\n            </div>\n            <div className=\"col-auto\">\n              Work Location: {currentUser.locationName}\n            </div>\n          </div>\n        ) : (\n          <></>\n        )} */}\n\n        <div className=\"container mt-4\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Login} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/userdata\" component={User} />\n            <Route exact path=\"/create-new\" component={CreateNew} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}